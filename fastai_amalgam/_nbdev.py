# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"is_3dlut_row": "augment_PIL-img_filters.ipynb",
         "read_lut": "augment_PIL-img_filters.ipynb",
         "ApplyPILFilter": "augment_PIL-img_filters.ipynb",
         "albu_augment": "augment_albumentations.ipynb",
         "AlbumentationsWrapper": "augment_albumentations.ipynb",
         "BlurringTfms": "augment_albumentations.ipynb",
         "StyleTfms": "augment_albumentations.ipynb",
         "WeatherTfms": "augment_albumentations.ipynb",
         "NoiseTfms": "augment_albumentations.ipynb",
         "ColorTonesTfms": "augment_albumentations.ipynb",
         "ColorChannelTfms": "augment_albumentations.ipynb",
         "LightingTfms": "augment_albumentations.ipynb",
         "OtherTfms": "augment_albumentations.ipynb",
         "Tfms": "augment_albumentations.ipynb",
         "KorniaBase": "augment_kornia.ipynb",
         "MotionBlur": "augment_kornia.ipynb",
         "ColorJitter": "augment_kornia.ipynb",
         "RandomRotation": "augment_kornia.ipynb",
         "MedianBlur": "augment_kornia.ipynb",
         "HFlip": "augment_kornia.ipynb",
         "VFlip": "augment_kornia.ipynb",
         "RandomGrayscale": "augment_kornia.ipynb",
         "RandomPerspective": "augment_kornia.ipynb",
         "to_cuda": "inference_export-to-other-frameworks.ipynb",
         "preprocess_one": "inference_export-to-other-frameworks.ipynb",
         "preprocess_batch": "inference_export-to-other-frameworks.ipynb",
         "PathLike": "interpret_gradcam.ipynb",
         "open_image": "utils.ipynb",
         "torch_to_onnx": "inference_export-to-other-frameworks.ipynb",
         "torch_to_numpy": "inference_export-to-other-frameworks.ipynb",
         "onnx_to_tf": "inference_export-to-other-frameworks.ipynb",
         "get_nn_spec": "inference_export-to-other-frameworks.ipynb",
         "onnx_to_coreml": "inference_export-to-other-frameworks.ipynb",
         "PIL.Image.Image.draw_labels": "utils.ipynb",
         "color": "utils.ipynb",
         "ClassificationInterpretationEx": "interpret_classification-interpretation.ipynb",
         "intersection": "interpret_compare-models.ipynb",
         "compare_venn": "interpret_compare-models.ipynb",
         "Hook": "interpret_gradcam.ipynb",
         "HookBwd": "interpret_gradcam.ipynb",
         "create_test_img": "interpret_gradcam.ipynb",
         "compute_gcam_items": "interpret_gradcam.ipynb",
         "compute_gcam_map": "interpret_gradcam.ipynb",
         "plt_decoded": "interpret_gradcam.ipynb",
         "plot_gcam": "interpret_gradcam.ipynb",
         "GradCam": "interpret_gradcam.ipynb",
         "FocalLoss": "loss_functions.ipynb",
         "FocalLossFlat": "loss_functions.ipynb",
         "make_img_grid": "utils.ipynb",
         "img2arraylike": "utils.ipynb",
         "TfmdDL.set_font_path": "show_data.ipynb",
         "draw_label": "show_data.ipynb",
         "TfmdDL.show_batch_grid": "show_data.ipynb",
         "ClassificationInterpretationEx.plot_confusion_matrix": "interpret_classification-interpretation.ipynb",
         "ClassificationInterpretationEx.plot_accuracy": "interpret_classification-interpretation.ipynb",
         "ClassificationInterpretationEx.plot_label_confidence": "interpret_classification-interpretation.ipynb",
         "ClassificationInterpretationEx.plot_top_losses_grid": "interpret_classification-interpretation.ipynb"}

modules = ["augment/pil_filters.py",
           "augment/albumentations.py",
           "augment/kornia.py",
           "inference/export.py",
           "inference/predict.py",
           "interpret/interpret.py",
           "interpret/compare.py",
           "interpret/gradcam.py",
           "loss_funcs.py",
           "utils.py",
           "show_data.py"]

doc_url = "https://Synopsis.github.io/fastai_amalgam/"

git_url = "https://github.com/Synopsis/fastai_amalgam/tree/master/"

def custom_doc_links(name): return None
